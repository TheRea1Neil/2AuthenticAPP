@model PaginatedList<_2AuthenticAPP.Models.ProductViewModel>
@{
    ViewData["Title"] = "Home Page";
    var categories = ViewBag.Categories as List<string>;
}

<div class="container">
<div class="filter-section">
    <h3>Filter</h3>
    <form method="get" asp-action="Index">
        <div class="form-group">
            <label>Categories:</label>
            <select name="category">
                <option value="">All Categories</option>
                @foreach (var category in ViewBag.Categories)
                {
                    <option value="@category" selected="@(ViewBag.SelectedCategory == category ? "selected" : null)">@category</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>Primary Color:</label>
            <select name="primaryColor" id="primaryColorFilter">
                <option value="">All</option>
                @foreach (var color in ViewBag.PrimaryColors)
                {
                    <option value="@color" selected="@(ViewBag.SelectedPrimaryColor == color ? "selected" : null)">@color</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>Secondary Color:</label>
            <select name="secondaryColor" id="secondaryColorFilter">
                <option value="">All</option>
                @foreach (var color in ViewBag.SecondaryColors)
                {
                    <option value="@color" selected="@(ViewBag.SelectedSecondaryColor == color ? "selected" : null)">@color</option>
                }
            </select>
        </div>

        <div class="form-group">
            <label>How many items per page</label>
            <button type="submit" name="showOption" value="6" class="btn @(ViewBag.ShowOption == "6" ? "btn-primary" : "btn-secondary")">Show 6</button>
            <br />
            <br />
            <button type="submit" name="showOption" value="12" class="btn @(ViewBag.ShowOption == "12" ? "btn-primary" : "btn-secondary")">Show 12</button>
            <br />
            <br />
            <button type="submit" name="showOption" value="18" class="btn @(ViewBag.ShowOption == "18" ? "btn-primary" : "btn-secondary")">Show 18</button>
        </div>

        <button type="submit" class="btn btn-primary">Apply Filters</button>
        <br />
        <a href="@Url.Action("Index")" class="btn btn-secondary">Clear Filters</a>
    </form>
</div>


    <div class="product-grid">
        <div class="grid-header">
            <h2>Popular Items</h2>
            <div class="actions">
                @if (User.IsInRole("Admin"))
                {
                    <a asp-action="AddProduct" class="btn btn-primary">Add Product</a>
                }
            </div>
            <div class="pagination top-pagination">
                @if (Model.HasPreviousPage)
                {
                    <a href="@Url.Action("Index", new { pageNumber = Model.PageIndex - 1, showOption = ViewBag.ShowOption })">Prev</a>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <a class="@(i == Model.PageIndex ? "active" : "")" href="@Url.Action("Index", new { pageNumber = i, showOption = ViewBag.ShowOption })">@i</a>
                }
                @if (Model.HasNextPage)
                {
                    <a href="@Url.Action("Index", new { pageNumber = Model.PageIndex + 1, showOption = ViewBag.ShowOption })">Next</a>
                }
            </div>
        </div>

        <div class="product-row">
            @foreach (var product in Model)
            {
                <div class="product-card">
                    <a href="@Url.Action("Details", "Home", new { id = product.ProductId })" class="product-link">
                        <img src="@product.ImgLink" alt="@product.Name">
                        <h3 class="product-name">@product.Name</h3>
                        <div class="rating">
                            @product.AverageRating?.ToString("0.0")<span class="star">&#9733;</span>
                        </div>
                        <div class="product-details">
                            <div class="price-wrapper">
                                <span class="price">@product.Price?.ToString("C")</span>
                            </div>
                            <button class="btn btn-add-to-cart">Add to Cart</button>
                        </div>
                    </a>
                </div>
                if ((@Model.IndexOf(product) + 1) % 3 == 0 && @Model.IndexOf(product) + 1 < Model.Count)
                {
                    @:</div><div class="product-row">
                }
            }
        </div>
    </div>
</div>

@section Scripts {
            <script>
              // This function will run immediately after the script is loaded
              (function() {
                // Check the initial state of the additional categories and set the button text
                var additionalCategories = document.getElementById('additionalCategories');
                var toggleButton = document.getElementById('toggleButton');
                if (additionalCategories.style.display === 'none') {
                  toggleButton.textContent = 'See More';
                } else {
                  additionalCategories.style.display = 'none'; // Hide additional categories by default
                  toggleButton.textContent = 'See More'; // Set the correct initial button text
                }
              })();

              function toggleCategories() {
                var additionalCategories = document.getElementById('additionalCategories');
                var toggleButton = document.getElementById('toggleButton');

                // Check the current state and toggle accordingly
                if (additionalCategories.style.display === 'none') {
                  additionalCategories.style.display = 'block'; // Show the additional categories
                  toggleButton.textContent = 'See Less'; // Change button text to "See Less"
                } else {
                  additionalCategories.style.display = 'none'; // Hide the additional categories
                  toggleButton.textContent = 'See More'; // Change button text back to "See More"
                }
              }
            </script>
        }